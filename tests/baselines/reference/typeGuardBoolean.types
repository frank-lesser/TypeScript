=== tests/cases/conformance/expressions/typeGuards/typeGuardBoolean.ts ===
function test(strOrNull: string | null, strOrUndefined: string | undefined) {
>test : (strOrNull: string | null, strOrUndefined: string | undefined) => void
>strOrNull : string | null
>null : null
>strOrUndefined : string | undefined

  var str: string = "original";
>str : string
>"original" : "original"

  var nil: null;
>nil : null
>null : null

  if (!Boolean(strOrNull)) {
>!Boolean(strOrNull) : boolean
>Boolean(strOrNull) : boolean
>Boolean : BooleanConstructor
>strOrNull : string | null

      nil = strOrNull;
>nil = strOrNull : null
>nil : null
>strOrNull : null
  }
  else {
      str = strOrNull;
>str = strOrNull : string
>str : string
>strOrNull : string
  }
  if (Boolean(strOrUndefined)) {
>Boolean(strOrUndefined) : boolean
>Boolean : BooleanConstructor
>strOrUndefined : string | undefined

      str = strOrUndefined;
>str = strOrUndefined : string
>str : string
>strOrUndefined : string
  }
}

